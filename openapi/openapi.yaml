openapi: 3.0.3

info:
  version: 1.0.0
  title: üõ¨[AOS 2023] Plataformas y Aeronaves üõ´
  description: >
    ## **[AOS 2023]** ‚úàÔ∏è API REST para la gesti√≥n de Plataformas y Aeronaves.
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  contact:
    name: M√°ster Universitario en Ingenier√≠a Web
    url: 'https://miw.etsisi.upm.es/'
    email: miw.etsisi@upm.es

servers:
  - url: http://127.0.0.1:80/api/v1

tags:
  - name: 'üõ¨ Plataforma'
    description: Plataforma
  - name: 'üõ©Ô∏è Aeronave'
    description: Aeronave
  - name: 'üìã Reserva'
    description: Reserva

paths:
  /plataformas:
    get:
      summary: Obtiene todas las plataformas
      description: |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint
        
        | Status Code | Descripci√≥n | Motivo                             |
        | ------------| ------------| -----------------------------------|
        | **200**     | OK          | Listado de plataformas             |
        | **404**     | NOT FOUND   | No hay ninguna plataforma          |
      operationId: plataforma_cget
      tags: [ 'üõ¨ Plataforma' ]
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/orderParam'
        - $ref: '#/components/parameters/orderingParam'
      responses:
        '200':
          description: Lista de plataformas disponibles
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                type: object
                properties:
                  plataformas:
                    description: array de plataformas
                    type: array
                    items:
                      $ref: '#/components/schemas/Plataforma'
                  links:
                    description: Enlaces de paginaci√≥n
                    readOnly: true
                    type: object
                    properties:
                      prevPage:
                        $ref: '#/components/schemas/Link'
                      nextPage:
                        $ref: '#/components/schemas/Link'
              examples:
                plataformas-example:
                  $ref: '#/components/examples/plataformas-example'
        '404':
          $ref: '#/components/responses/Response_404'
    options:
      summary: Proporciona la lista de los m√©todos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de m√©todos HTTP soportados (separados por comas).
      operationId: plataforma_coptions
      tags: [ 'üõ¨ Plataforma' ]
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta est√° vac√≠o&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'
    post:
      summary: A√±ade una nueva plataforma
      description: |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint
        
        | Status Code | Descripci√≥n          | Motivo                                    |
        | ------------| ---------------------| ------------------------------------------|
        | **201**     | CREATED              | La plataforma ha sido creada              |
        | **400**     | BAD REQUEST          | El identificador √∫nico ya existe          |
        | **422**     | UNPROCESSABLE ENTITY | Falta alguno de los atributos obligatorios|
        |             |                      | o el valor no est√° permitido              |
      tags: [ 'üõ¨ Plataforma' ]
      operationId: plataforma_post
      requestBody:
        $ref: '#/components/requestBodies/plataformaRB'
      responses:
        '201':
          description: Nueva Plataforma creada
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plataforma'
        '400':
          $ref: '#/components/responses/Response_400'
        '422':
          $ref: '#/components/responses/Response_422'

  /plataformas/{plataforma_id}:
    parameters:
      - $ref: '#/components/parameters/plataformaId'
    options:
      summary: Proporciona la lista de los m√©todos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de m√©todos HTTP soportados (separados por comas).
      operationId: plataforma_options
      tags: [ 'üõ¨ Plataforma' ]
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta est√° vac√≠o&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'
    get:
      summary: Obtiene una plataforma identificada por `plataformaId`
      description: |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint
        
        | Status Code | Descripci√≥n | Motivo                             |
        | ------------| ------------| -----------------------------------|
        | **200**     | OK          | Si la plataforma existe            |
        | **404**     | NOT FOUND   | Si no existe la plataforma         |
      operationId: plataforma_get
      tags: [ 'üõ¨ Plataforma' ]
      responses:
        '200':
          description: Plataforma
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plataforma'
        '404':
          $ref: '#/components/responses/Response_404'
    delete:
      summary: Elimina la plataforma identificada por `plataformaId`
      description: |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint
        
        | Status Code      | Descripci√≥n | Motivo                                    |
        | ---------------- | ------------| ------------------------------------------|
        | **204**          | NO CONTENT  | La plataforma exist√≠a y ha sido eliminada |
        | **404**          | NOT FOUND   | Si la plataforma no existe                |
      operationId: plataforma_delete
      tags: [ 'üõ¨ Plataforma' ]
      responses:
        '204':
          description: Plataforma eliminada &lt;Cuerpo de la respuesta vac√≠o&gt;
        '404':
          $ref: '#/components/responses/Response_404'
    put:
      tags: [ 'üõ¨ Plataforma' ]
      summary: Modifica la plataforma identificada por `plataformaId`.
      description:  |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint

        | Status Code | Descripci√≥n         | Motivo                                        |
        | ------------| --------------------| ----------------------------------------------|
        | **209**     | CONTENT RETURNED    | La plataforma exist√≠a y ha sido actualizada   |
        | **404**     | NOT FOUND           | Si la plataforma no existe                    |
        | **412**     | PRECONDITION FAILED | Si el ETag proporcionado no est√° actualizado  |
        | **422**     | UNPROCESSABLE ENTITY| Valor no permitido en alguno de los attributos|
      operationId: plataforma_put
      parameters:
        # https://www.rfc-editor.org/rfc/rfc7232.html#page-13
        - $ref: '#/components/parameters/ifMatchParam'
      requestBody:
        $ref: '#/components/requestBodies/plataformaUpdate'
      responses:
        '209':
          description: '`CONTENT RETURNED`: la Plataforma ha sido actualizada'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plataforma'
        '404':
          $ref: '#/components/responses/Response_404'
        '412':
          $ref: '#/components/responses/Response_412'
        '422':
          $ref: '#/components/responses/Response_422'

  /aeronaves:
    get:
      summary: Obtiene todas las aeronaves
      description: |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint
        
        | Status Code | Descripci√≥n | Motivo                             |
        | ------------| ------------| -----------------------------------|
        | **200**     | OK          | Listado de aeronaves             |
        | **404**     | NOT FOUND   | No hay ninguna aeronave          |
      operationId: aeronave_cget
      tags: [ 'üõ©Ô∏è Aeronave' ]
      parameters:
        - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          description: Lista de aeronaves disponibles
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                type: object
                properties:
                  aeronaves:
                    description: array de aeronaves
                    type: array
                    items:
                      $ref: '#/components/schemas/Aeronave'
                  links:
                    description: Enlaces de paginaci√≥n
                    readOnly: true
                    type: object
                    properties:
                      prevPage:
                        $ref: '#/components/schemas/Link'
                      nextPage:
                        $ref: '#/components/schemas/Link'
              examples:
                aeronaves-example:
                  $ref: '#/components/examples/aeronaves-example'
        '404':
          $ref: '#/components/responses/Response_404'
    options:
      summary: Proporciona la lista de los m√©todos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de m√©todos HTTP soportados (separados por comas).
      operationId: aeronave_coptions
      tags: [ 'üõ©Ô∏è Aeronave' ]
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta est√° vac√≠o&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'
    post:
      summary: A√±ade una nueva aeronave
      description: |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint
        
        | Status Code | Descripci√≥n          | Motivo                                    |
        | ------------| ---------------------| ------------------------------------------|
        | **201**     | CREATED              | La aeronave ha sido creada                |
        | **400**     | BAD REQUEST          | El identificador √∫nico ya existe          |
        | **422**     | UNPROCESSABLE ENTITY | Falta alguno de los atributos obligatorios|
        |             |                      | o el valor no est√° permitido              |
      tags: [ 'üõ©Ô∏è Aeronave' ]
      operationId: aeronave_post
      requestBody:
        $ref: '#/components/requestBodies/aeronaveRB'
      responses:
        '201':
          description: Nueva Aeronave creada
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aeronave'
        '400':
          $ref: '#/components/responses/Response_400'
        '422':
          $ref: '#/components/responses/Response_422'

  /aeronaves/{aeronave_id}:
    parameters:
      - $ref: '#/components/parameters/aeronaveId'
    options:
      summary: Proporciona la lista de los m√©todos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de m√©todos HTTP soportados (separados por comas).
      operationId: aeronave_options
      tags: [ 'üõ©Ô∏è Aeronave' ]
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta est√° vac√≠o&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'
    get:
      summary: Obtiene una aeronave identificada por `aeronaveId`
      description: |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint
        
        | Status Code | Descripci√≥n | Motivo                             |
        | ------------| ------------| -----------------------------------|
        | **200**     | OK          | Si la aeronave existe            |
        | **404**     | NOT FOUND   | Si no existe la aeronave         |
      operationId: aeronave_get
      tags: [ 'üõ©Ô∏è Aeronave' ]
      responses:
        '200':
          description: Aeronave
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aeronave'
        '404':
          $ref: '#/components/responses/Response_404'
    put:
      tags: [ 'üõ©Ô∏è Aeronave' ]
      summary: Modifica la aeronave identificada por `aeronaveId`.
      description:  |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint

        | Status Code | Descripci√≥n         | Motivo                                        |
        | ------------| --------------------| ----------------------------------------------|
        | **209**     | CONTENT RETURNED    | La aeronave exist√≠a y ha sido actualizada   |
        | **404**     | NOT FOUND           | Si la aeronave no existe                    |
        | **412**     | PRECONDITION FAILED | Si el ETag proporcionado no est√° actualizado  |
        | **422**     | UNPROCESSABLE ENTITY| Valor no permitido en alguno de los attributos|
      operationId: aeronave_put
      parameters:
        # https://www.rfc-editor.org/rfc/rfc7232.html#page-13
        - $ref: '#/components/parameters/ifMatchParam'
      requestBody:
        $ref: '#/components/requestBodies/aeronaveUpdate'
      responses:
        '209':
          description: '`CONTENT RETURNED`: la Aeronave ha sido actualizada'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aeronave'
        '404':
          $ref: '#/components/responses/Response_404'
        '412':
          $ref: '#/components/responses/Response_412'
        '422':
          $ref: '#/components/responses/Response_422'

  /reservas/{plataforma_id}/{aeronave_id}:
    parameters:
      - $ref: '#/components/parameters/plataformaId'
      - $ref: '#/components/parameters/aeronaveId'
    post:
      summary: A√±ade una nueva reserva de una plataforma para una aeronave concreta
      description: |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint
        
        | Status Code | Descripci√≥n          | Motivo                                    |
        | ------------| ---------------------| ------------------------------------------|
        | **201**     | CREATED              | La reserv ha sido creada                  |
        | **404**     | BAD REQUEST          | El identificador de plataforma o aeronave no existe          |
        | **409**     | CONFLICT             | La plataforma no est√° Libre               |
      tags: [ 'üìã Reserva', 'üõ¨ Plataforma', 'üõ©Ô∏è Aeronave' ]
      operationId: reserva_post
      responses:
        '201':
          description: Nueva reserva creada
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reserva'
        '404':
          $ref: '#/components/responses/Response_404'
        '409':
          $ref: '#/components/responses/Response_409'
    options:
      summary: Proporciona la lista de los m√©todos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de m√©todos HTTP soportados (separados por comas).
      operationId: reserva_coptions
      tags: [ 'üìã Reserva', 'üõ¨ Plataforma', 'üõ©Ô∏è Aeronave' ]
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta est√° vac√≠o&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'

components:
  schemas:
    Plataforma:
      title: 'üõ¨ Plataforma de estacionamiento de Aeronaves'
      description: >
        √Årea definida, en un aer√≥dromo terrestre, destinada a dar cabida a
        las aeronaves para los fines de embarque o desembarque del pasaje,
        correo o carga, reabastecimiento de combustible, estacionamiento o
        mantenimiento incluyendo calles de rodaje en plataforma, calles de
        acceso al puesto de estacionamiento y v√≠as de servicio.<br>
        Reglamento de la Circulaci√≥n A√©rea Operativa (BOE-A-1994-18714)
      type: object
      properties:
        plataforma:
          type: object
          required: [ id, tipo_envergadura ]
          properties:
            id:
              $ref: '#/components/schemas/Id_Plataforma'
            tipo_envergadura:
              $ref: '#/components/schemas/Envergadura_Aeronave'
            estado:
              $ref: '#/components/schemas/Estados_Plataformas'
            # A√±adir resto de propiedades
            links:
              description: Enlaces de relaci√≥n de la Plataforma
              readOnly: true
              type: object
              properties:
                parent:
                  $ref: '#/components/schemas/Link'
                self:
                  $ref: '#/components/schemas/Link'
      example: { "plataforma": {
                     "id": "P02-001-A",
                     "tipo_envergadura": "C",
                     "estado": "Reservada",
                     "links": {
                       "parent": {
                         "href": "https://example.com/api/v1/plataformas",
                         "rel": "plataforma_post plataforma_cget"
                       },
                       "self": {
                          "href": "https://example.com/api/v1/plataformas/P01-123-Z",
                          "rel": "plataforma_get plataforma_delete plataforma_put"
                       }
                     }
                  }
                }

    Aeronave:
      description: >
        Toda m√°quina que puede desplazarse en la atm√≥sfera por reacciones del aire que
        no sean las reacciones del mismo contra la superficie de la tierra.<br>
        OACI - Organizaci√≥n de Aviaci√≥n Civil Internacional
      title: 'üõ©Ô∏è Aeronave'
      type: object
      properties:
        aeronave:
          type: object
          required: [ matr√≠cula, envergadura ]
          properties:
            matr√≠cula:
              description: Matr√≠cula de la aeronave
              type: string
              pattern: "^[A-Z]{1,2}-[A-Z]{3}$"
              example: "EC-JGR"
              # https://v6.fakerjs.dev/guide/
              x-faker: helpers.regexpStyleStringParse('^[A-Z]{1,2}-[A-Z]{3}$')
            envergadura:
              $ref: '#/components/schemas/Envergadura_Aeronave'
            links:
              description: Enlaces de relaci√≥n de la Aeronave
              readOnly: true
              type: object
              properties:
                parent:
                  $ref: '#/components/schemas/Link'
                self:
                  $ref: '#/components/schemas/Link'
      example: { "aeronave": {
        "matr√≠cula": "EC-JGR",
        "envergadura": "B",
        "links": {
          "parent": {
            "href": "https://example.com/api/v1/aeronaves",
            "rel": "aeronave_post aeronave_cget"
          },
          "self": {
            "href": "https://example.com/api/v1/aeronaves/EC-ESP",
            "rel": "aeronave_get aeronave_put"
          }
        }
      } }

    Reserva:
      title: 'üìã Reserva de una plataforma para una aeronave'
      type: object
      properties:
        reserva:
          type: object
          required: [ id_plataforma, id_aeronave ]
          properties:
            id_plataforma:
              $ref: '#/components/schemas/Id_Plataforma'
            id_aeronave:
              description: Matr√≠cula de la aeronave
              type: string
              pattern: "^[A-Z]{1,2}-[A-Z]{3}$"
              example: "EC-JGR"
      example: { "reserva": { "id_plataforma":"P03-567-Z", "id_aeronave":"EC-XYZ" } }

    Id_Plataforma:
      title: Identificador √∫nico de la plataforma
      type: string
      pattern: "^[A-Z]{1}[0-9]{2}-[0-9]{3}-[A-Z]$"
      example: "P01-001-A"
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.regexpStyleStringParse('P[10-99]-[100-999]-X')

    Envergadura_Aeronave:
      # https://es.wikipedia.org/wiki/C%C3%B3digo_de_referencia_aeroportuario
      description: |
        Clasificaci√≥n las aeronaves por su envergadura:
        * `A`: hasta 15 m - Cessna 172, Diamond DA40
        * `B`: de 15 m a 24 m - Saab 340
        * `C`: de 24 m a 36 m - McDonnell Douglas MD-81, Airbus A318, Airbus A319, Airbus A320, Airbus A321, Boeing 737
        * `D`: de 36 m a 52 m - McDonnell Douglas MD-11, Airbus A300, Boeing 757, Boeing 767
        * `E`: de 52 m a 65 m - Airbus A330, Airbus A340, Boeing 747, Boeing 777, Boeing 787, Airbus A350
        * `F`: de 65 m a 80 m - Airbus A380, Boeing 747-8i.
      type: string
      enum: [ A, B, C, D, E, F ]
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.arrayElement([ 'A', 'B', 'C', 'D', 'E', 'F' ])

    Estados_Plataformas:
      description: |
        Estado de la Plataforma:
        * `Libre`: Plataforma disponible
        * `Ocupada`: Plataforma ocupada
        * `Reservada`: Plataforma reservada para pr√≥xima utilizaci√≥n
        * `Inhabilitada`: Plataforma inhabilitada para su uso
      type: string
      default: "Inhabilitada"
      enum: [ "Libre", "Ocupada", "Reservada", "Inhabilitada" ]
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.arrayElement([ 'Libre', 'Ocupada', 'Reservada', 'Inhabilitada' ])

    HTTP_Problem:
      type: object
      externalDocs:
        url: https://tools.ietf.org/html/rfc7807
      description: |
        Problem Details for HTTP APIs
        [https://tools.ietf.org/html/rfc7807](https://tools.ietf.org/html/rfc7807)
      properties:
        type:
          type: string
          format: uri
          description: A URI reference [RFC3986] that identifies the problem type
        title:
          type: string
          description: short human-readable summary of the problem type
        status:
          type: number
          description: HTTP status code
        detail:
          type: string
          description: Human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: >
            A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.

    Link:
      description: Enlace de relaci√≥n
      title: 'üîó Link'
      type: object
      properties:
        href:
          description: URL del enlace
          type: string
          format: uri
          x-faker: internet.url
        rel:
          description: "Relaci√≥n del recurso enlazado con el actual. Contiene una lista de tipos
                    de relaciones separados por espacio."
          type: string
          x-faker: lorem.words
      example:
        href: https://www.example.com/path/resource
        rel: relAction1 relAction2

  headers:
    ETag:
      description: "Entity Tag (identificador √∫nico proporcionado para validaci√≥n de cach√©)"
      schema:
        type: string
        pattern: "[0-9a-f]*"
        example:
          33a64df551425fcc
    Allow:
      description: Lista de m√©todos HTTP soportados
      schema:
        type: string
      example: GET, DELETE, PUT, OPTIONS
    Location:
      description: '`URI` del nuevo recurso'
      schema:
        type: string
        format: uri
        x-faker: internet.url
        example:
          https://example.com/api/v1/plataformas/P01-001-A

  requestBodies:
    plataformaRB:
      description: Informaci√≥n de la nueva Plataforma
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [ id, tipo_envergadura ]
            properties:
              id:
                $ref: '#/components/schemas/Id_Plataforma'
              tipo_envergadura:
                $ref: '#/components/schemas/Envergadura_Aeronave'
              estado:
                $ref: '#/components/schemas/Estados_Plataformas'
    aeronaveRB:
      description: Informaci√≥n de la nueva Aeronave
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              matr√≠cula:
                description: Matr√≠cula de la aeronave
                type: string
                pattern: "^[A-Z]{1,2}-[A-Z]{3}$"
                example: "EC-JGR"
              envergadura:
                $ref: '#/components/schemas/Envergadura_Aeronave'
          example: { "matr√≠cula": "EC-JGR", "envergadura": "B" }
    plataformaUpdate:
      description: Nuevos atributos de la Plataforma
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              tipo_envergadura:
                $ref: '#/components/schemas/Envergadura_Aeronave'
              estado:
                $ref: '#/components/schemas/Estados_Plataformas'
          example: { "tipo_envergadura": "B", "estado": "Libre" }
    aeronaveUpdate:
      description: Nuevos atributos de la Aeronave
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              matr√≠cula:
                description: Matr√≠cula de la aeronave
                type: string
                pattern: "^[A-Z]{1,2}-[A-Z]{3}$"
                example: "EC-JGR"
              envergadura:
                $ref: '#/components/schemas/Envergadura_Aeronave'
          example: { "matr√≠cula": "EC-JGR", "envergadura": "B" }

  responses:
    Response_400:
      description: '`BAD REQUEST` El identificador √∫nico ya existe.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-400:
              $ref: '#/components/examples/response-http-400'
    Response_404:
      description: '`NOT FOUND`: recurso no disponible'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-404:
              $ref: '#/components/examples/response-http-404'
    Response_409:
      description: '`CONFLICT`: el recurso no re√∫ne las condiciones adecuadas'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-404:
              $ref: '#/components/examples/response-http-409'
    Response_412:
      description: '`PRECONDITION FAILED`: El ETag proporcionado no est√° actualizado'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-412:
              $ref: '#/components/examples/response-http-412'
    Response_422:
      description: '`UNPROCESSABLE ENTITY` Falta alguno de los atributos obligatorios o son incorrectos.'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-422:
              $ref: '#/components/examples/response-http-422'

  parameters:
    plataformaId:
      name: plataforma_id
      in: path
      description: Identificador √∫nico de la Plataforma
      required: true
      schema:
        $ref: '#/components/schemas/Id_Plataforma'
    aeronaveId:
      name: aeronave_id
      in: path
      description: Identificador √∫nico de la Aeronave
      required: true
      schema:
        description: Matr√≠cula de la aeronave
        type: string
        pattern: "^[A-Z]{1,2}-[A-Z]{3}$"
        example: "EC-JGR"
    ifMatchParam:
      name: If-Match
      in: header
      description: ETag actual del recurso que se desea modificar
      required: true
      schema:
        type: string
        pattern: "[0-9a-f]*"
    orderParam:
      name: order
      in: query
      description: 'Criterio de ordenaci√≥n: `id` | `tipo_envergadura`'
      required: false
      allowEmptyValue: false
      schema:
        type: string
        enum:
          - id
          - tipo_envergadura
    orderingParam:
      name: ordering
      in: query
      description: 'Ordenaci√≥n: `ASC` | `DESC`'
      required: false
      allowEmptyValue: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
    pageParam:
      name: page
      in: query
      description: 'N√∫mero de p√°gina'
      required: false
      allowEmptyValue: false
      schema:
        type: integer
        minimum: 1

  examples:
    plataformas-example:
      value:
        plataformas:
          - { "plataforma": { "id": "P01-001-A", "tipo_envergadura": "C", "estado": "Reservada",
                "links": {
                  "parent": { "href": "https://example.com/api/v1/plataformas", "rel": "plataforma_post plataforma_cget"},
                  "self": { "href": "https://example.com/api/v1/plataformas/P01-001-A", "rel": "plataforma_get plataforma_delete plataforma_put" }
              }}}
          - { "plataforma": { "id": "P02-039-C", "tipo_envergadura": "E", "estado": "Libre",
                "links": {
                  "parent": { "href": "https://example.com/api/v1/plataformas", "rel": "plataforma_post plataforma_cget"},
                  "self": { "href": "https://example.com/api/v1/plataformas/P02-039-C", "rel": "plataforma_get plataforma_delete plataforma_put" }
              }}}
        links: {
          "prevPage": { "href": "https://example.com/api/v1/plataformas?page=2", "rel": "prevPage" },
          "nextPage": { "href": "https://example.com/api/v1/plataformas?page=4", "rel": "nextPage" }
        }

    aeronaves-example:
      value:
        aeronaves:
          - { "aeronave": { "matr√≠cula": "EC-JGR", "envergadura": "B",
                "links": {
                  "parent": { "href": "https://example.com/api/v1/aeronaves", "rel": "aeronave_post aeronave_cget"},
                  "self": { "href": "https://example.com/api/v1/aeronaves/EC-JGR", "rel": "aeronave_get aeronave_put" }
                }}}
          - { "aeronave": { "matr√≠cula": "EC-HRX", "envergadura": "F",
                "links": {
                  "parent": { "href": "https://example.com/api/v1/aeronaves", "rel": "aeronave_post aeronave_cget"},
                  "self": { "href": "https://example.com/api/v1/aeronaves/EC-HRX", "rel": "aeronave_get aeronave_put" }
                }}}
        links: {
          "prevPage": { "href": "https://example.com/api/v1/aeronaves?page=6", "rel": "prevPage" },
          "nextPage": { "href": "https://example.com/api/v1/aeronaves?page=8", "rel": "nextPage" }
        }

    response-http-400:
      value:
        type: https://httpstatuses.com/400
        title: UNPROCESSABLE ENTITY
        status: 400
        detail: El identificador √∫nico ya existe
        instance: about:blank
    response-http-404:
      value:
        type: https://httpstatuses.com/404
        title: NOT FOUND
        status: 404
        detail: El recurso solicitado no est√° disponible.
        instance: about:blank
    response-http-409:
      value:
        type: https://httpstatuses.com/409
        title: NOT FOUND
        status: 409
        detail: El recurso no re√∫ne las condiciones requeridas para la operaci√≥n.
        instance: about:blank
    response-http-412:
      value:
        type: https://httpstatuses.com/412
        title: PRECONDITION FAILED
        status: 412
        detail: El ETag proporcionado no est√° actualizado
        instance: about:blank
    response-http-422:
      value:
        type: https://httpstatuses.com/422
        title: UNPROCESSABLE ENTITY
        status: 422
        detail: Falta alguno de los atributos obligatorios o contiene un valor no admitido
        instance: about:blank